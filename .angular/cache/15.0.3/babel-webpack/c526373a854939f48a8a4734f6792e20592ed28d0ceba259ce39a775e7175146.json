{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GpaService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.subject = [];\n    this.login = {};\n  }\n  ngOnInit() {}\n  getCalculateGPA(dept, sem) {\n    this.login = JSON.parse(sessionStorage.getItem('login'));\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password)\n    });\n    return this.httpClient.get(\"https://cgpa-calculator-production.up.railway.app/deptsemester/\" + dept + \"/\" + sem, {\n      headers\n    });\n  }\n  postCalculateGPA(dept, sem, grades) {\n    this.login = JSON.parse(sessionStorage.getItem('login'));\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password)\n    });\n    return this.httpClient.post(\"https://cgpa-calculator-production.up.railway.app/deptsemester/gpa/\" + dept + \"/\" + sem, grades, {\n      headers\n    });\n  }\n  putSemesterGPA(semGPA) {\n    this.login = JSON.parse(sessionStorage.getItem('login'));\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password)\n    });\n    return this.httpClient.put(\"https://cgpa-calculator-production.up.railway.app/deptsemester/saveupdateGPA\", semGPA, {\n      headers\n    });\n  }\n  getDashboardDetails() {\n    this.login = JSON.parse(sessionStorage.getItem('login'));\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password)\n    });\n    return this.httpClient.get(\"https://cgpa-calculator-production.up.railway.app/dashboard\", {\n      headers\n    });\n  }\n}\nGpaService.ɵfac = function GpaService_Factory(t) {\n  return new (t || GpaService)(i0.ɵɵinject(i1.HttpClient));\n};\nGpaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GpaService,\n  factory: GpaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAkC9D,OAAM,MAAOC,UAAU;EAMrBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAC5B,IAAI,CAACC,OAAO,GAAC,EAAE;IACf,IAAI,CAACC,KAAK,GAAC,EAAW;EACxB;EAEAC,QAAQ,IAER;EAEAC,eAAe,CAACC,IAAW,EAACC,GAAU;IACpC,IAAI,CAACJ,KAAK,GAACK,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE,CAAC;IACvD,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAAEe,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,KAAK,GAAG,GAAG,GAAG,IAAI,CAACZ,KAAK,CAACa,QAAQ;IAAC,CAAE,CAAC;IACjH,OAAO,IAAI,CAACf,UAAU,CAACgB,GAAG,CAAM,iEAAiE,GAACX,IAAI,GAAC,GAAG,GAACC,GAAG,EAAC;MAACK;IAAO,CAAC,CAAC;EAC3H;EAEAM,gBAAgB,CAACZ,IAAW,EAACC,GAAU,EAACY,MAAU;IAChD,IAAI,CAAChB,KAAK,GAACK,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE,CAAC;IACvD,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAAEe,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,KAAK,GAAG,GAAG,GAAG,IAAI,CAACZ,KAAK,CAACa,QAAQ;IAAC,CAAE,CAAC;IACjH,OAAO,IAAI,CAACf,UAAU,CAACmB,IAAI,CAAM,qEAAqE,GAACd,IAAI,GAAC,GAAG,GAACC,GAAG,EAACY,MAAM,EAAC;MAACP;IAAO,CAAC,CAAC;EACvI;EAEAS,cAAc,CAACC,MAAkB;IAC/B,IAAI,CAACnB,KAAK,GAACK,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE,CAAC;IACvD,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAAEe,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,KAAK,GAAG,GAAG,GAAG,IAAI,CAACZ,KAAK,CAACa,QAAQ;IAAC,CAAE,CAAC;IACjH,OAAO,IAAI,CAACf,UAAU,CAACsB,GAAG,CAAM,8EAA8E,EAACD,MAAM,EAAC;MAACV;IAAO,CAAC,CAAC;EAClI;EAEAY,mBAAmB;IACjB,IAAI,CAACrB,KAAK,GAACK,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE,CAAC;IACvD,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAAEe,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,KAAK,GAAG,GAAG,GAAG,IAAI,CAACZ,KAAK,CAACa,QAAQ;IAAC,CAAE,CAAC;IACjH,OAAO,IAAI,CAACf,UAAU,CAACgB,GAAG,CAAM,6DAA6D,EAAC;MAACL;IAAO,CAAC,CAAC;EAC1G;;AArCWb,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAA0B,SAAV1B,UAAU;EAAA2B,YAFT;AAAM","names":["HttpHeaders","GpaService","constructor","httpClient","subject","login","ngOnInit","getCalculateGPA","dept","sem","JSON","parse","sessionStorage","getItem","headers","Authorization","btoa","email","password","get","postCalculateGPA","grades","post","putSemesterGPA","semGPA","put","getDashboardDetails","factory","providedIn"],"sourceRoot":"","sources":["/Users/nikhil/Playground/Project_2/cgpacalculator/src/app/gpa/gpa.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable , OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\n\ninterface Subject{\n  name:String,\n  coursecode:String,\n  semester:number,\n  credit:number,\n  department:String\n}\n\ninterface SemesterGPA{\n  semester:number,\n  gpa:number,\n  reg:Register\n}\n\ninterface Register{\n  name:String,\n  email:String,\n  password:String,\n  registernumber:String,\n  contact:String\n}\n\ninterface Login{\n  email:String,\n  password:String\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GpaService implements OnInit{\n\n subject:Subject[];\n login:Login;\n\n\n  constructor(private httpClient:HttpClient) { \n    this.subject=[];\n    this.login={} as Login;\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  getCalculateGPA(dept:String,sem:number):Observable<any>{\n    this.login=JSON.parse(sessionStorage.getItem('login')!);\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password) });\n    return this.httpClient.get<any>(\"https://cgpa-calculator-production.up.railway.app/deptsemester/\"+dept+\"/\"+sem,{headers});\n  }\n\n  postCalculateGPA(dept:String,sem:number,grades:any){\n    this.login=JSON.parse(sessionStorage.getItem('login')!);\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password) });\n    return this.httpClient.post<any>(\"https://cgpa-calculator-production.up.railway.app/deptsemester/gpa/\"+dept+\"/\"+sem,grades,{headers});\n  }\n\n  putSemesterGPA(semGPA:SemesterGPA):Observable<SemesterGPA>{\n    this.login=JSON.parse(sessionStorage.getItem('login')!);\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password) });\n    return this.httpClient.put<any>(\"https://cgpa-calculator-production.up.railway.app/deptsemester/saveupdateGPA\",semGPA,{headers});\n  }\n\n  getDashboardDetails():Observable<Register>{\n    this.login=JSON.parse(sessionStorage.getItem('login')!);\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(this.login.email + ':' + this.login.password) });\n    return this.httpClient.get<any>(\"https://cgpa-calculator-production.up.railway.app/dashboard\",{headers});\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}